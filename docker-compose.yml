version: "3.7"

services:
  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch
    environment:
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      xpack.security.enabled: "true"
      discovery.type: single-node
      TAKE_FILE_OWNERSHIP: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      retries: 300
      interval: 1s

  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    container_name: kibana
    volumes:
      - ./kibana/config.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: $ELASTIC_USER
      ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
    depends_on:
      - elasticsearch: { condition: service_healthy }
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      retries: 300
      interval: 1s

  packetbeat:
    image: docker.elastic.co/beats/packetbeat:$ELK_VERSION
    container_name: packetbeat
    user: root
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./packetbeat/config.yml:/usr/share/packetbeat/packetbeat.yml
    environment:
      ELASTICSEARCH_HOSTS: localhost:9200
      KIBANA_HOST: localhost:5601
      ELASTICSEARCH_USERNAME: $ELASTIC_USER
      ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
    cap_add:
      - NET_RAW
      - NET_ADMIN
    command: ["--strict.perms=false"]
    depends_on:
      - elasticsearch: { condition: service_healthy }
      - kibana: { condition: service_healthy }
    restart: on-failure

networks:
  default:
    name: $DEFAULT_NETWORK
